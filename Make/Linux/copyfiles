#!/bin/bash
# copies a bhuman distribution to a robot

usage()
{
  echo "usage: copyfiles [Release|Develop|Debug] [<ipaddress>|(-m n <ipaddress>)*] {options}"
  echo "  options:"
  echo "    -l <location>          set location"
  echo "    -t <color>             set team color to blue or red"
  echo "    -p <number>            set player number"
  echo "    -n <number>            set team number"
  echo "    -r                     restart bhuman and if necessary naoqi"
  echo "    -rr                    restart bhuman and naoqi"
  echo "    -m n <ip>              copy to <ip>, and set playernumber to n (one -m per robot)"
  echo "    -wc                    compile also under Windows"
  echo "    -nc                    never compile"
  echo "    -d                     remove all log files before copying"
  echo "    -h | --help | /h | /?  print this text"
  echo "  examples:"
  echo "    ./copyfiles Develop 134.102.204.229 -p 1"
  echo "    ./copyfiles Release -m 1 10.0.0.1 -m 3 10.0.0.2"
  exit 1
}

copy()
{
  REMOTE=$1
  PLAYER=$2
  RESTARTNAOQI=

  if [ ! -z $FORCERESTART ]; then
    RESTARTNAOQI=1
    RESTART=1
  fi

  echo "updating configs"
  rsync --del --exclude=*.stx --exclude=*.log --exclude=.* --exclude=*.tc --exclude=.svn --exclude=/Images --exclude=/Logs --exclude=/Scenes --exclude=/Keys --exclude=bhuman --exclude=libbhuman.so --exclude=libgamectrl.so --chmod=u+rw,go+r,Dugo+x -rche "ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet" ../../Config/. nao@$REMOTE:/home/nao/Config
  
  echo "updating libbhuman"
  if [ `rsync --chmod=u+rw,go+r,Dugo+x --stats -che "ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet" ../../Build/libbhuman/Linux/$CONFIG/libbhuman.so nao@$REMOTE:/home/nao/Config/libbhuman.so | grep -c 'transferred: 1'` == 1 ]; then
    if [ ! -z $RESTART ]; then
      RESTARTNAOQI=1
    fi
  fi
  
  echo "updating libgamectrl"
  if [ `rsync --chmod=u+rw,go+r,Dugo+x --stats -che "ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet" ../../Build/libgamectrl/Linux/$CONFIG/libgamectrl.so nao@$REMOTE:/home/nao/Config/libgamectrl.so | grep -c 'transferred: 1'` == 1 ]; then
    if [ ! -z $RESTART ]; then
      RESTARTNAOQI=1
    fi
  fi
  
  if [ ! -z $RESTARTNAOQI ]; then
    echo "restarting naoqi"
    ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "sudo /etc/init.d/naoqi restart &> /dev/null"
  fi

  echo "updating bhuman"
  rsync --chmod=u+rw,go+r,Dugo+x -che "ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet" ../../Build/$COMPONENT/Linux/$CONFIG/bhuman nao@$REMOTE:/home/nao/Config/bhuman

  # set volume to 50%
  echo "setting volume to 50%"
  ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "amixer set PCM 50% unmute >> /dev/null"

  # set settings on robot
  if [ ! -z $LOCATION ] || [ ! -z $TEAM ] || [ ! -z $PLAYER ] || [ ! -z $NUMBER ]; then
    SEDFLAGS=""
  [ ! -z $LOCATION ] && SEDFLAGS="$SEDFLAGS -e 's/location.*/location = $LOCATION;/'"
  [ ! -z $TEAM ] && SEDFLAGS="$SEDFLAGS -e 's/teamColor.*/teamColor = $TEAM;/'"
  [ ! -z $PLAYER ] && SEDFLAGS="$SEDFLAGS -e 's/playerNumber.*/playerNumber = $PLAYER;/'"
  [ ! -z $NUMBER ] && SEDFLAGS="$SEDFLAGS -e 's/teamNumber.*/teamNumber = $NUMBER;/'"
  [ ! -z $NUMBER ] && SEDFLAGS="$SEDFLAGS -e 's/teamPort.*/teamPort = 10${NUMBER}01;/'"
  [ ! -z $NUMBER ] && SEDFLAGS="$SEDFLAGS -e 's/teamPort = 1.*\([0-9][0-9]\)01;/teamPort = 1\101;/'"
    ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "sed $SEDFLAGS < /home/nao/Config/settings.cfg > /home/nao/Config/settingsTEMP.cfg && mv /home/nao/Config/settingsTEMP.cfg /home/nao/Config/settings.cfg"
  [ $? -ne 0 ] && exit 1
  fi
  true
}

scriptPath=$(echo $0 | sed "s|^\.\./|`pwd`/../|" | sed "s|^\./|`pwd`/|")
basePath=$(dirname "${scriptPath}")
currPath=$(pwd)
keyFile=../../Config/Keys/id_rsa_nao
cd "${basePath}"

# init variables
[ -z $CONFIG ] && CONFIG="Develop"
SOLUTION="B-Human.sln"
COMPONENT="Nao"
PLAYER=
TEAM=
NUMBER=
LOCATION=
REMOTE=
COMPILE=1
NUMMULTIPLE=0
WINDOWSCOMPILE=
RESTART=
FORCERESTART=
MULTIPLEDATA=
REMOVE_LOGS=

# parse options
[ "x" = "x$*" ] && usage
while true; do
  case $1 in
    "")
      break
      ;;
    "-p" | "/p")
      shift
      PLAYER=$1
      ;;
    "-l" | "/l")
      shift
      LOCATION=$1
      ;;
    "-t" | "/t")
      shift
      TEAM=$1
      ;;
    "-n" | "/n")
      shift
      NUMBER=$1
      ;;
    "-wc" | "/wc")
      WINDOWSCOMPILE=1
      ;;
    "-nc" | "/nc")
      COMPILE=
      ;;
    "-r" | "/r")
      RESTART=1
      ;;
    "-rr" | "/rr")
      RESTART=1
      FORCERESTART=1
      ;;
    "-d" | "/d")
      REMOVE_LOGS=1
      RESTART=1
      ;;
    "-h" | "/h" | "/?" | "--help")
      usage
      ;;
    "-m" | "/m")
      shift
      MULTIPLEDATA[$NUMMULTIPLE]=$1
      shift
      MULTIPLEDATA[$NUMMULTIPLE + 1]=$1
      echo "Found -m, num=$NUMMULTIPLE with [$NUMMULTIPLE]=${MULTIPLEDATA[$NUMMULTIPLE]}, [$NUMMULTIPLE+1]=${MULTIPLEDATA[$NUMMULTIPLE + 1]}"
      let "NUMMULTIPLE+=2"
      ;;
    "Nao")
      COMPONENT="Nao"
      ;;
    "Release")
      CONFIG="Release"
      ;;
    "Develop")
      CONFIG="Develop"
      ;;
    "Debug")
      CONFIG="Debug"
      ;;
    -*)
      echo "unknown parameter: $1"
      usage
      ;;
    *)
      REMOTE=$1
      ;;
  esac
  shift
done

#key may only be accessed by the owner. Otherwise ssh will complain
chmod 400 $keyFile

if [ ! -z $COMPILE ]; then
  if [ -z "${ComSpec}${COMSPEC}" ]; then
    # on linux
    make $COMPONENT CONFIG=$CONFIG
    [ $? -ne 0 ] && exit 1
  else
    if [ ! -z $WINDOWSCOMPILE ]; then
      echo "------ Compiling $COMPONENT ($CONFIG) ------"
      DEVENV="$(cygpath -u "$(cygpath -m -s "${VS90COMNTOOLS}")../IDE/devenv.com")"
      CMD="${DEVENV} ${SOLUTION} /Build ${CONFIG} /Project _${COMPONENT}"
      $CMD
      [ $? -ne 0 ] && exit 1
      echo "------ Successfully compiled ------"
    fi
  fi
fi

if [ ! -z $REMOTE ]; then
  if [ ! -z $RESTART ]; then
    echo "stopping bhuman"
    ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "/home/nao/bin/bhumand stop > /dev/null"
  fi
  
  if [ ! -z $REMOVE_LOGS ]; then
    echo "removing log files"
    ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "rm -rf /home/nao/logs/* > /dev/null"
  fi

  copy $REMOTE $PLAYER
  
  if [ ! -z $RESTART ]; then
    echo "starting bhuman"
    ssh -i $keyFile -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet nao@$REMOTE "/home/nao/bin/bhumand start > /dev/null"
  fi

else # try to deploy to multiple targets
  if [ "$NUMMULTIPLE" -ne 0 ]; then
    for ((i=0; i < NUMMULTIPLE; i+=2))
    do
      copy ${MULTIPLEDATA[i+1]} ${MULTIPLEDATA[i]}
    done
  fi
fi

cd "${currPath}"
